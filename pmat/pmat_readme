

WARNING!!!!!!!!!!!!!!!!!!!

pmat1.f90 was accidentally deleted 23rd May 2013 

Seek backup !!!!!!!!!!!!!!!!!!!!!!!!!



Recent updates: 
13th May 2010
20th Sep 2012 (remove redundant arguments in msbdb,maddb,csb1b,cad1b)
14th Nov 2017: Begin to add pmat6, representations of polyhedral groups
               (work in progress)

Suite pmat is intended to contain sp- and dp-overloaded
Fortran 90 versions of the useful matrix and linear algebra routines.
The routines are adapted from Tsukasa Fujita's modifications of the
earlier matrix routines developed by Purser. Owing to the greater power
and versatility of Fortran 90, a large proportion of the original
matrix routines have been rendered obsolete. Also, many of those
routines that remain now have significantly simpler argument lists
than before.

As a rule, pmat1 contains basic full-matrix routines, while pmat2 is
specialized to banded-matrix routines (old diagonals from left to right stored
as columns of new rectangular matrices, to save space). The main uses of pmat2
routines is to filtering and compact-numerics routines.

Older versions of these (and some other) source codes, some of which may be
used operationally, are to be found in $HOMES/oldpmat/ as "pmat1_sep2012.f90",
"pmat2_sep2012.f90" and as "pact1.f90".

As of Sep 2012 the routines that were formerly in pinv.f90 have been 
gathered together and put into pmat.f90 (together with some of the other
inversion routines that were formerly in pmat1.f90). Also, some little-used
routines have been deleted (or at least commented out) from pmat1.f90 when
it is clear that they can be easily reproduced from exiting routines and
the fortran 95 intrinsic functions that are now part of the language. 
For convenience, and greater versatility in algebraic formulas, many of the
utility matrix and vector routines formerly represented as subroutines in
pmat1.f90 and pmat2.f90 can now be better expressed in the forms of fortran
functions; these are now gathered together into pmat3.f90 (module pmat3.mod)
and, as a result, a very substantial proportion of the old subroutines of
pmat1.f90, and especially the banded matrix subroutines of pmat2.f90, have
been rendered redundant. The redundant routines will be retained for a while
but will print warning reminder messages to say that they will not be kept
forever! Also, since it has now become fairly unusual to perform any
nontrivial matrix manipulations at anything less than double precision, the
new routines (including some complex-element routines) are only being added
in real(dp) or complex(dpc) or, in the special cases that make sense, in
integer kinds. Where we notice that a "DO" construct can be replaced by a
"FORALL" construct, this is done.

The euclidean 3D geometry routines formerly in peuc.f90 and libpeuc.a 
have been copied to new pmat4.f90 and brought into libpmat.a, but retaining
the module name, peuc.mod. In May 2017, quaternion and spinor representations
of rotations, and conversion routines, were added to pmat4.

Also, the geographical mapping routines formerly
in pgeo.f90 have been copied to pmat5.f90 and added to libpmat.a, though
retaining the module names.

Roughly speaking, the new source files of the pmat library are specialized:

pmat:  Non-banded inversion and back-substitution routines.
pmat1: Other assorted general matrix and polynomial manipulations that are
       NOT naturally expressible as fortran functions.
pmat2: Assorted banded matrix and compact scheme routines that are NOT
       naturally expressible as fortan functions.
pmat3: General and banded matrix utilities that ARE naturally expressible as
       fortran functions, and with the "pure" attribute wherever applicable.
pmat4: Euclidean geometry in 3- and n-dimensions, module peuc.mod.
       Includes special quaternion and spinor representations of rotations
pmat5: Geographical map transformations, module pgeo.mod
pmat6: Matrix and quaternion representations of polyhedral groups?

For eigen routines, look in peig.f90, where some of the numerical recipes
are gathered.

High order uniform grid centered diference schemes can be computed using the
routines of pmat2; these can also be generated by the simple recursions, 
incorporated in specialized routines dif and ddif in suite pbend. The
recursive method is numerically superior, being very stable up to extremely
wide stencils. Midpoint averages, quadrature and midpoint differencing
are also available using the recursive method.

For reference, the 1st and 2nd 
derivatives formulae half-stencils up to 10th-order accuracy are:

1/2                                 -2       1
2/3 -1/12                           -5/2     4/3  -1/12
3/4 -3/30 1/60                     -49/18    3/2  -3/20 1/90
4/5 -1/5  4/100 -1/280            -205/72    8/5  -1/5  8/315 -1/560
5/6 -5/21 5/84  -5/504 1/1260   -36883/12600 5/3  -5/21 5/126 -5/3150 1/3150

